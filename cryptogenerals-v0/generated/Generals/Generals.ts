// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AssignedCastle extends ethereum.Event {
  get params(): AssignedCastle__Params {
    return new AssignedCastle__Params(this);
  }
}

export class AssignedCastle__Params {
  _event: AssignedCastle;

  constructor(event: AssignedCastle) {
    this._event = event;
  }

  get generalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get castleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BioChanged extends ethereum.Event {
  get params(): BioChanged__Params {
    return new BioChanged__Params(this);
  }
}

export class BioChanged__Params {
  _event: BioChanged;

  constructor(event: BioChanged) {
    this._event = event;
  }

  get generalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bio(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ExperienceGained extends ethereum.Event {
  get params(): ExperienceGained__Params {
    return new ExperienceGained__Params(this);
  }
}

export class ExperienceGained__Params {
  _event: ExperienceGained;

  constructor(event: ExperienceGained) {
    this._event = event;
  }

  get generalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get xpGained(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get xpRemaining(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ExperienceSpent extends ethereum.Event {
  get params(): ExperienceSpent__Params {
    return new ExperienceSpent__Params(this);
  }
}

export class ExperienceSpent__Params {
  _event: ExperienceSpent;

  constructor(event: ExperienceSpent) {
    this._event = event;
  }

  get generalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get xpSpent(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get xpRemaining(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GeneralCreated extends ethereum.Event {
  get params(): GeneralCreated__Params {
    return new GeneralCreated__Params(this);
  }
}

export class GeneralCreated__Params {
  _event: GeneralCreated;

  constructor(event: GeneralCreated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get generalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get generalCreated(): GeneralCreatedGeneralCreatedStruct {
    return changetype<GeneralCreatedGeneralCreatedStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class GeneralCreatedGeneralCreatedStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get defense(): BigInt {
    return this[1].toBigInt();
  }

  get strength(): BigInt {
    return this[2].toBigInt();
  }

  get intelligence(): BigInt {
    return this[3].toBigInt();
  }

  get agility(): BigInt {
    return this[4].toBigInt();
  }

  get abilityPower(): BigInt {
    return this[5].toBigInt();
  }

  get magicResistance(): BigInt {
    return this[6].toBigInt();
  }

  get constitution(): BigInt {
    return this[7].toBigInt();
  }

  get speed(): BigInt {
    return this[8].toBigInt();
  }

  get charisma(): BigInt {
    return this[9].toBigInt();
  }

  get level(): BigInt {
    return this[10].toBigInt();
  }

  get createdAt(): BigInt {
    return this[11].toBigInt();
  }
}

export class LeveledUp extends ethereum.Event {
  get params(): LeveledUp__Params {
    return new LeveledUp__Params(this);
  }
}

export class LeveledUp__Params {
  _event: LeveledUp;

  constructor(event: LeveledUp) {
    this._event = event;
  }

  get leveler(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get generalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get level(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NameChanged extends ethereum.Event {
  get params(): NameChanged__Params {
    return new NameChanged__Params(this);
  }
}

export class NameChanged__Params {
  _event: NameChanged;

  constructor(event: NameChanged) {
    this._event = event;
  }

  get generalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Quest extends ethereum.Event {
  get params(): Quest__Params {
    return new Quest__Params(this);
  }
}

export class Quest__Params {
  _event: Quest;

  constructor(event: Quest) {
    this._event = event;
  }

  get generalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get xpGained(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get xpTotal(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Generals__generalsResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: BigInt;

  constructor(
    value0: string,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getDefense(): BigInt {
    return this.value1;
  }

  getStrength(): BigInt {
    return this.value2;
  }

  getIntelligence(): BigInt {
    return this.value3;
  }

  getAgility(): BigInt {
    return this.value4;
  }

  getAbilityPower(): BigInt {
    return this.value5;
  }

  getMagicResistance(): BigInt {
    return this.value6;
  }

  getConstitution(): BigInt {
    return this.value7;
  }

  getSpeed(): BigInt {
    return this.value8;
  }

  getCharisma(): BigInt {
    return this.value9;
  }

  getLevel(): BigInt {
    return this.value10;
  }

  getCreatedAt(): BigInt {
    return this.value11;
  }
}

export class Generals extends ethereum.SmartContract {
  static bind(address: Address): Generals {
    return new Generals("Generals", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GAME_ROLE(): Bytes {
    let result = super.call("GAME_ROLE", "GAME_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GAME_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("GAME_ROLE", "GAME_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bios(param0: BigInt): string {
    let result = super.call("bios", "bios(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_bios(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("bios", "bios(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  castle(param0: BigInt): BigInt {
    let result = super.call("castle", "castle(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_castle(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("castle", "castle(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  castleOwnerPrice(): BigInt {
    let result = super.call(
      "castleOwnerPrice",
      "castleOwnerPrice():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_castleOwnerPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "castleOwnerPrice",
      "castleOwnerPrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  castlesAddress(): Address {
    let result = super.call("castlesAddress", "castlesAddress():(address)", []);

    return result[0].toAddress();
  }

  try_castlesAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "castlesAddress",
      "castlesAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  castlesContract(): Address {
    let result = super.call(
      "castlesContract",
      "castlesContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_castlesContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "castlesContract",
      "castlesContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  changeNamePrice(): BigInt {
    let result = super.call(
      "changeNamePrice",
      "changeNamePrice():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_changeNamePrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "changeNamePrice",
      "changeNamePrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimedWithCastle(param0: BigInt): boolean {
    let result = super.call(
      "claimedWithCastle",
      "claimedWithCastle(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_claimedWithCastle(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "claimedWithCastle",
      "claimedWithCastle(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  experience(param0: BigInt): BigInt {
    let result = super.call("experience", "experience(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_experience(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("experience", "experience(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  experienceRequired(_level: BigInt, _xpPerLevel: BigInt): BigInt {
    let result = super.call(
      "experienceRequired",
      "experienceRequired(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_level),
        ethereum.Value.fromUnsignedBigInt(_xpPerLevel)
      ]
    );

    return result[0].toBigInt();
  }

  try_experienceRequired(
    _level: BigInt,
    _xpPerLevel: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "experienceRequired",
      "experienceRequired(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_level),
        ethereum.Value.fromUnsignedBigInt(_xpPerLevel)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  generals(param0: BigInt): Generals__generalsResult {
    let result = super.call(
      "generals",
      "generals(uint256):(string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Generals__generalsResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toBigInt()
    );
  }

  try_generals(param0: BigInt): ethereum.CallResult<Generals__generalsResult> {
    let result = super.tryCall(
      "generals",
      "generals(uint256):(string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Generals__generalsResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toBigInt()
      )
    );
  }

  generalsQuestLog(param0: BigInt): BigInt {
    let result = super.call(
      "generalsQuestLog",
      "generalsQuestLog(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_generalsQuestLog(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "generalsQuestLog",
      "generalsQuestLog(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxLevelGenerals(): BigInt {
    let result = super.call(
      "maxLevelGenerals",
      "maxLevelGenerals():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxLevelGenerals(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxLevelGenerals",
      "maxLevelGenerals():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxTokens(): BigInt {
    let result = super.call("maxTokens", "maxTokens():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxTokens(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxTokens", "maxTokens():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  price(): BigInt {
    let result = super.call("price", "price():(uint256)", []);

    return result[0].toBigInt();
  }

  try_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("price", "price():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  xpPerNameChange(): BigInt {
    let result = super.call(
      "xpPerNameChange",
      "xpPerNameChange():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_xpPerNameChange(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "xpPerNameChange",
      "xpPerNameChange():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  xpPerQuest(): BigInt {
    let result = super.call("xpPerQuest", "xpPerQuest():(uint256)", []);

    return result[0].toBigInt();
  }

  try_xpPerQuest(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("xpPerQuest", "xpPerQuest():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddExperienceCall extends ethereum.Call {
  get inputs(): AddExperienceCall__Inputs {
    return new AddExperienceCall__Inputs(this);
  }

  get outputs(): AddExperienceCall__Outputs {
    return new AddExperienceCall__Outputs(this);
  }
}

export class AddExperienceCall__Inputs {
  _call: AddExperienceCall;

  constructor(call: AddExperienceCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _experience(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddExperienceCall__Outputs {
  _call: AddExperienceCall;

  constructor(call: AddExperienceCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class ChangeBioCall extends ethereum.Call {
  get inputs(): ChangeBioCall__Inputs {
    return new ChangeBioCall__Inputs(this);
  }

  get outputs(): ChangeBioCall__Outputs {
    return new ChangeBioCall__Outputs(this);
  }
}

export class ChangeBioCall__Inputs {
  _call: ChangeBioCall;

  constructor(call: ChangeBioCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _bio(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeBioCall__Outputs {
  _call: ChangeBioCall;

  constructor(call: ChangeBioCall) {
    this._call = call;
  }
}

export class ChangeCastleCall extends ethereum.Call {
  get inputs(): ChangeCastleCall__Inputs {
    return new ChangeCastleCall__Inputs(this);
  }

  get outputs(): ChangeCastleCall__Outputs {
    return new ChangeCastleCall__Outputs(this);
  }
}

export class ChangeCastleCall__Inputs {
  _call: ChangeCastleCall;

  constructor(call: ChangeCastleCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _castleId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeCastleCall__Outputs {
  _call: ChangeCastleCall;

  constructor(call: ChangeCastleCall) {
    this._call = call;
  }
}

export class ChangeNameCall extends ethereum.Call {
  get inputs(): ChangeNameCall__Inputs {
    return new ChangeNameCall__Inputs(this);
  }

  get outputs(): ChangeNameCall__Outputs {
    return new ChangeNameCall__Outputs(this);
  }
}

export class ChangeNameCall__Inputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeNameCall__Outputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }
}

export class FlipPauseCall extends ethereum.Call {
  get inputs(): FlipPauseCall__Inputs {
    return new FlipPauseCall__Inputs(this);
  }

  get outputs(): FlipPauseCall__Outputs {
    return new FlipPauseCall__Outputs(this);
  }
}

export class FlipPauseCall__Inputs {
  _call: FlipPauseCall;

  constructor(call: FlipPauseCall) {
    this._call = call;
  }
}

export class FlipPauseCall__Outputs {
  _call: FlipPauseCall;

  constructor(call: FlipPauseCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class LevelUpCall extends ethereum.Call {
  get inputs(): LevelUpCall__Inputs {
    return new LevelUpCall__Inputs(this);
  }

  get outputs(): LevelUpCall__Outputs {
    return new LevelUpCall__Outputs(this);
  }
}

export class LevelUpCall__Inputs {
  _call: LevelUpCall;

  constructor(call: LevelUpCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LevelUpCall__Outputs {
  _call: LevelUpCall;

  constructor(call: LevelUpCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintWithCastleCall extends ethereum.Call {
  get inputs(): MintWithCastleCall__Inputs {
    return new MintWithCastleCall__Inputs(this);
  }

  get outputs(): MintWithCastleCall__Outputs {
    return new MintWithCastleCall__Outputs(this);
  }
}

export class MintWithCastleCall__Inputs {
  _call: MintWithCastleCall;

  constructor(call: MintWithCastleCall) {
    this._call = call;
  }

  get _castleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class MintWithCastleCall__Outputs {
  _call: MintWithCastleCall;

  constructor(call: MintWithCastleCall) {
    this._call = call;
  }
}

export class MintWithNameCall extends ethereum.Call {
  get inputs(): MintWithNameCall__Inputs {
    return new MintWithNameCall__Inputs(this);
  }

  get outputs(): MintWithNameCall__Outputs {
    return new MintWithNameCall__Outputs(this);
  }
}

export class MintWithNameCall__Inputs {
  _call: MintWithNameCall;

  constructor(call: MintWithNameCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class MintWithNameCall__Outputs {
  _call: MintWithNameCall;

  constructor(call: MintWithNameCall) {
    this._call = call;
  }
}

export class OwnerClaimCall extends ethereum.Call {
  get inputs(): OwnerClaimCall__Inputs {
    return new OwnerClaimCall__Inputs(this);
  }

  get outputs(): OwnerClaimCall__Outputs {
    return new OwnerClaimCall__Outputs(this);
  }
}

export class OwnerClaimCall__Inputs {
  _call: OwnerClaimCall;

  constructor(call: OwnerClaimCall) {
    this._call = call;
  }
}

export class OwnerClaimCall__Outputs {
  _call: OwnerClaimCall;

  constructor(call: OwnerClaimCall) {
    this._call = call;
  }
}

export class OwnerWithdrawCall extends ethereum.Call {
  get inputs(): OwnerWithdrawCall__Inputs {
    return new OwnerWithdrawCall__Inputs(this);
  }

  get outputs(): OwnerWithdrawCall__Outputs {
    return new OwnerWithdrawCall__Outputs(this);
  }
}

export class OwnerWithdrawCall__Inputs {
  _call: OwnerWithdrawCall;

  constructor(call: OwnerWithdrawCall) {
    this._call = call;
  }
}

export class OwnerWithdrawCall__Outputs {
  _call: OwnerWithdrawCall;

  constructor(call: OwnerWithdrawCall) {
    this._call = call;
  }
}

export class QuestCall extends ethereum.Call {
  get inputs(): QuestCall__Inputs {
    return new QuestCall__Inputs(this);
  }

  get outputs(): QuestCall__Outputs {
    return new QuestCall__Outputs(this);
  }
}

export class QuestCall__Inputs {
  _call: QuestCall;

  constructor(call: QuestCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class QuestCall__Outputs {
  _call: QuestCall;

  constructor(call: QuestCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get newBaseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetCastleContractAddressCall extends ethereum.Call {
  get inputs(): SetCastleContractAddressCall__Inputs {
    return new SetCastleContractAddressCall__Inputs(this);
  }

  get outputs(): SetCastleContractAddressCall__Outputs {
    return new SetCastleContractAddressCall__Outputs(this);
  }
}

export class SetCastleContractAddressCall__Inputs {
  _call: SetCastleContractAddressCall;

  constructor(call: SetCastleContractAddressCall) {
    this._call = call;
  }

  get _castle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCastleContractAddressCall__Outputs {
  _call: SetCastleContractAddressCall;

  constructor(call: SetCastleContractAddressCall) {
    this._call = call;
  }
}

export class SetMaxLevelsCall extends ethereum.Call {
  get inputs(): SetMaxLevelsCall__Inputs {
    return new SetMaxLevelsCall__Inputs(this);
  }

  get outputs(): SetMaxLevelsCall__Outputs {
    return new SetMaxLevelsCall__Outputs(this);
  }
}

export class SetMaxLevelsCall__Inputs {
  _call: SetMaxLevelsCall;

  constructor(call: SetMaxLevelsCall) {
    this._call = call;
  }

  get _newMaxLevels(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxLevelsCall__Outputs {
  _call: SetMaxLevelsCall;

  constructor(call: SetMaxLevelsCall) {
    this._call = call;
  }
}

export class SetMaxtokensCall extends ethereum.Call {
  get inputs(): SetMaxtokensCall__Inputs {
    return new SetMaxtokensCall__Inputs(this);
  }

  get outputs(): SetMaxtokensCall__Outputs {
    return new SetMaxtokensCall__Outputs(this);
  }
}

export class SetMaxtokensCall__Inputs {
  _call: SetMaxtokensCall;

  constructor(call: SetMaxtokensCall) {
    this._call = call;
  }

  get newMaxtokens(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxtokensCall__Outputs {
  _call: SetMaxtokensCall;

  constructor(call: SetMaxtokensCall) {
    this._call = call;
  }
}

export class SetPriceCall extends ethereum.Call {
  get inputs(): SetPriceCall__Inputs {
    return new SetPriceCall__Inputs(this);
  }

  get outputs(): SetPriceCall__Outputs {
    return new SetPriceCall__Outputs(this);
  }
}

export class SetPriceCall__Inputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }

  get _newPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _type(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPriceCall__Outputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }
}

export class SetXPPerNameChangeCall extends ethereum.Call {
  get inputs(): SetXPPerNameChangeCall__Inputs {
    return new SetXPPerNameChangeCall__Inputs(this);
  }

  get outputs(): SetXPPerNameChangeCall__Outputs {
    return new SetXPPerNameChangeCall__Outputs(this);
  }
}

export class SetXPPerNameChangeCall__Inputs {
  _call: SetXPPerNameChangeCall;

  constructor(call: SetXPPerNameChangeCall) {
    this._call = call;
  }

  get _newXpPerNameChange(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetXPPerNameChangeCall__Outputs {
  _call: SetXPPerNameChangeCall;

  constructor(call: SetXPPerNameChangeCall) {
    this._call = call;
  }
}

export class SetXPPerQuestCall extends ethereum.Call {
  get inputs(): SetXPPerQuestCall__Inputs {
    return new SetXPPerQuestCall__Inputs(this);
  }

  get outputs(): SetXPPerQuestCall__Outputs {
    return new SetXPPerQuestCall__Outputs(this);
  }
}

export class SetXPPerQuestCall__Inputs {
  _call: SetXPPerQuestCall;

  constructor(call: SetXPPerQuestCall) {
    this._call = call;
  }

  get _newXPPerQuest(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetXPPerQuestCall__Outputs {
  _call: SetXPPerQuestCall;

  constructor(call: SetXPPerQuestCall) {
    this._call = call;
  }
}

export class SpendExperienceCall extends ethereum.Call {
  get inputs(): SpendExperienceCall__Inputs {
    return new SpendExperienceCall__Inputs(this);
  }

  get outputs(): SpendExperienceCall__Outputs {
    return new SpendExperienceCall__Outputs(this);
  }
}

export class SpendExperienceCall__Inputs {
  _call: SpendExperienceCall;

  constructor(call: SpendExperienceCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _experience(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SpendExperienceCall__Outputs {
  _call: SpendExperienceCall;

  constructor(call: SpendExperienceCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
